---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-log-receiver
  labels:
    app: audit-log-receiver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audit-log-receiver
  template:
    metadata:
      labels:
        app: audit-log-receiver
    spec:
      containers:
      - name: audit-log-receiver
        image: python:3.11
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        command:
        - sh
        args:
        - -c
        - pip install flask; python3 /data/script/app.py
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: script-volume
          mountPath: /data/script
      volumes:
      - name: script-volume
        configMap:
          name: audit-log-receiver-script

---
apiVersion: v1
kind: Service
metadata:
  name: audit-log-receiver
  labels:
    app: audit-log-receiver
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: audit-log-receiver
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: audit-log-receiver
spec:
  ingressClassName: traefik
  rules:
  - host: audit-log-receiver.domain.local
    http:
      paths:
      - backend:
          service:
            name: audit-log-receiver
            port:
              number: 8443
        path: /

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: audit-log-receiver-script
data:
  app.py: |
    #!/bin/python3

    import json
    from flask import Flask, request, Response

    app = Flask(__name__)

    def create_response(path, method, headers):
      
      response = {
        "created": True
      }

      return Response(json.dumps(response), 200, mimetype='application/json')

    @app.route('/', defaults={'path': ''}, methods = ['GET', 'POST'])
    @app.route('/<path:path>', methods = ['GET', 'POST'])
    def catch_all(path):
      print(request.get_data().decode().replace("\n", ""))
      return create_response(path, request.method, request.headers)

    if __name__ == '__main__':
      app.run(host='0.0.0.0', port=8080)
